<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Sermon on devlags | Tomasz Zubertowski</title>
    <link>http://localhost:1313/categories/sermon/</link>
    <description>Recent content in Sermon on devlags | Tomasz Zubertowski</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-GB</language>
    <copyright>Copyright up to you</copyright>
    <lastBuildDate>Mon, 12 Mar 2018 08:04:08 +0100</lastBuildDate>
    
	<atom:link href="http://localhost:1313/categories/sermon/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Sunday sermon #3 - face to face code reviews loose their value</title>
      <link>http://localhost:1313/post/face-to-face-codereviews/</link>
      <pubDate>Mon, 12 Mar 2018 08:04:08 +0100</pubDate>
      
      <guid>http://localhost:1313/post/face-to-face-codereviews/</guid>
      <description>What are code reviews? Hopefully most of my readers whom are programmers are working in an environment where code reviews are part of the software development process. For those readers who have no idea what those are: code reviews are self-explainatory, it&amp;rsquo;s a process of reviewing changes submitted by one programmer by other programmers working on the same project.
Mind you - such reviews were not so popular just a few years back but benefits of including them in software development pipeline made them adapted widely anywhere from open source communities to business teams.</description>
    </item>
    
    <item>
      <title>Sunday sermon #2 - help your project, use CI &amp; automation</title>
      <link>http://localhost:1313/post/ci-wont-save-you/</link>
      <pubDate>Wed, 14 Sep 2016 12:28:08 +0100</pubDate>
      
      <guid>http://localhost:1313/post/ci-wont-save-you/</guid>
      <description>1. What&amp;rsquo;s CI CI stand for continous integration. The simplest way I could explain what it really is is with an example.
Say, you remember when you started your first coding related job, or maybe the second. Hopefully the company/environment provided you with opportunity to review code throughout the team. If so you may have noticed that often it is not the solution itself that takes the most time but the actual codereviews, discussions and merging that is the problem.</description>
    </item>
    
    <item>
      <title>Sunday sermon #1 - QA, goalkeeper of every developer</title>
      <link>http://localhost:1313/post/qa-the-goalkeeper/</link>
      <pubDate>Sun, 03 Jul 2016 21:28:08 +0100</pubDate>
      
      <guid>http://localhost:1313/post/qa-the-goalkeeper/</guid>
      <description>Wait, what? Yeah, your goalkeeper. Surprised? If you are a developer there&amp;rsquo;s a great chance that you are underestimating the role of QA in development process. The less experience you have the more the chance is. But hey, that&amp;rsquo;s natural you know.
You will grow to love them on your first major, ekhm, bug on production.
Bugs on production never happen to me! Maybe, or perhaps you just ignore the pingpong you usually play with your QA tester.</description>
    </item>
    
  </channel>
</rss>